{"version":3,"sources":["images/memories.png","images/memories-Text.png","reducers/posts.js","constants/actionTypes.js","reducers/auth.js","reducers/index.js","components/Navbar/styles.js","components/Navbar/Navbar.js","api/index.js","actions/posts.js","components/Posts/Post/styles.js","components/Posts/Post/Post.js","components/Posts/styles.js","components/Posts/Posts.js","components/Form/styles.js","components/Form/Form.js","components/styles.js","components/Pagination.jsx","components/Home/styles.js","components/Home/Home.js","components/Auth/styles.js","components/Auth/input.js","components/Auth/icon.js","components/Auth/Auth.js","actions/auth.js","components/PostDetails/styles.js","components/PostDetails/CommentSection.jsx","components/PostDetails/PostDetails.jsx","App.js","index.js"],"names":["module","exports","posts","state","isLoading","action","type","payload","data","currentPage","numberOfPages","post","map","_id","filter","authReducer","authData","localStorage","setItem","JSON","stringify","clear","combineReducers","auth","makeStyles","theme","appBar","borderRadius","margin","display","flexDirection","justifyContent","alignItems","padding","breakpoints","down","heading","color","palette","primary","main","textDecoration","fontSize","fontWeight","image","marginLeft","marginTop","toolbar","width","profile","logout","userName","textAlign","brandContainer","purple","getContrastText","deepPurple","backgroundColor","Navbar","classes","useStyles","useState","parse","getItem","user","setUser","dispatch","useDispatch","history","useHistory","location","useLocation","push","useEffect","token","decode","exp","Date","getTime","AppBar","className","position","to","src","memoriesText","alt","height","memoriesLogo","Toolbar","Avatar","result","name","imageUrl","Typography","variant","Button","onClick","component","Link","API","axios","create","baseURL","interceptors","request","use","req","headers","Authorization","fetchPost","id","get","fetchPosts","page","fetchPostsBySearch","searchQuery","search","tags","updatePost","updatedPost","patch","deletePost","delete","likePost","comment","value","signIn","formData","signUp","getPostsBySearch","a","api","console","log","commentPost","comments","media","paddingTop","backgroundBlendMode","border","fullHeightCard","card","overlay","top","left","overlay2","right","grid","details","title","cardActions","cardAction","Post","setCurrentId","likes","setLikes","userId","googleId","hasLikedPost","find","like","handleLike","Likes","length","Card","raised","elevation","ButtonBase","CardMedia","selectedFile","moment","createdAt","fromNow","creator","style","size","e","stopPropagation","tag","trim","gutterBottom","CardContent","message","CardActions","disabled","mainContainer","smMargin","spacing","Posts","useSelector","CircularProgress","Grid","container","key","item","xs","sm","md","lg","root","paper","form","flexWrap","fileInput","buttonSubmit","marginBottom","Form","currentId","postData","setPostData","p","Paper","align","autoComplete","noValidate","onSubmit","preventDefault","newPost","createPost","TextField","label","fullWidth","onChange","target","split","multiple","onDone","base64","ul","Paginate","getPosts","Pagination","count","Number","renderItem","PaginationItem","appBarSearch","pagination","gridContainer","Home","query","URLSearchParams","setSearch","setTags","searchPost","join","Grow","in","Container","maxWidth","onKeyPress","keyCode","styles","onAdd","onDelete","tagToDelete","searchButton","avatar","secondary","submit","googleButton","input","handleChange","autoFocus","handleShowPassword","half","required","InputProps","endAdornment","InputAdornment","IconButton","icon","viewBox","fill","d","initialState","firstName","lastName","email","password","confirmPassword","Auth","showPassword","setShowPassword","isSignup","setIsSignup","setFormData","googleSuccess","res","profileObj","tokenId","error","googleFailure","signup","signin","prevShowPassword","clientId","render","renderProps","startIcon","onSuccess","onFailure","cookiePolicy","prevIsSignup","objectFit","maxHeight","section","flex","imageSection","recommendedPosts","loadingPaper","commentsOuterContainer","commentsInnerContainer","overflowY","marginRight","CommentSection","setComments","setComment","commentsRef","useRef","handleClick","finalComment","newComments","current","scrollIntoView","behavior","c","i","ref","rows","multiline","PostDetails","useParams","getPost","Divider","cursor","openPost","App","path","exact","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.60f82f71.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/memories.5c0c63fb.png\";","module.exports = __webpack_public_path__ + \"static/media/memories-Text.18ebdb6d.png\";","import { FETCH_ALL, FETCH_BY_SEARCH, FETCH_POST, CREATE, UPDATE, DELETE, LIKE, START_LOADING, END_LOADING, COMMENT } from '../constants/actionTypes'\n\nconst posts = (state = { isLoading: true, posts: [] }, action) => {\n\n    switch(action.type){\n        case START_LOADING:\n            return { ...state, isLoading: true }\n        case END_LOADING:\n            return { ...state, isLoading: false }\n        case FETCH_ALL:\n            return {\n                ...state,\n                posts: action.payload.data,\n                currentPage: action.payload.currentPage,\n                numberOfPages: action.payload.numberOfPages\n            }\n        case FETCH_POST:\n            return { ...state, post: action.payload }\n        case FETCH_BY_SEARCH:\n            return { ...state, posts: action.payload }\n        case LIKE:\n            return { ...state, posts: state.posts.map((post) => post._id === action.payload._id ? action.payload : post )}\n        case COMMENT:\n            return { \n                ...state, \n                posts: state.posts.map((post) => {\n                    if(post._id === action.payload._id) {\n                        return action.payload\n                    }\n                    return post \n                })}\n            case CREATE:\n            return { ...state, posts: [...state.posts, action.payload]}\n        case UPDATE:\n            return { ...state, posts: state.posts.map((post) => post._id === action.payload._id ? action.payload : post )}\n        case DELETE:\n            return { ...state, posts: state.posts.filter((post) => post._id !== action.payload)}\n        default:\n            return state;\n    }\n    \n}\n\nexport default posts","export const CREATE = 'CREATE'\nexport const UPDATE = 'UPDATE'\nexport const DELETE = 'DELETE'\nexport const FETCH_ALL = 'FETCH_ALL'\nexport const FETCH_POST = 'FETCH_POST'\nexport const FETCH_BY_SEARCH = 'FETCH_BY_SEARCH'\nexport const LIKE = 'LIKE'\nexport const START_LOADING = 'START_LOADING'\nexport const END_LOADING = 'END_LOADING'\nexport const AUTH = 'AUTH'\nexport const LOGOUT = 'LOGOUT'\nexport const COMMENT = 'COMMENT'","import { AUTH, LOGOUT } from '../constants/actionTypes'\n \nconst authReducer = (state = { authData: null }, action) => {\n    switch (action.type) {\n        case AUTH:\n            localStorage.setItem('profile', JSON.stringify({...action?.data}))\n            return { ...state, authData: action?.data }\n        case LOGOUT:\n            localStorage.clear()\n            return { ...state, authData: null }\n        default:\n            return state\n    }\n}\n\nexport default authReducer","import { combineReducers } from \"redux\"\n\nimport posts from './posts'\nimport auth from './auth'\n\nexport default combineReducers({ posts, auth })","import { makeStyles } from '@material-ui/core/styles'\nimport { deepPurple } from '@material-ui/core/colors'\n\nexport default makeStyles((theme) => ({\n  appBar: {\n    borderRadius: 15,\n    margin: '30px 0',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '10px 50px',\n    [theme.breakpoints.down('sm')]: {\n      flexDirection: 'column',\n    },\n  },\n  heading: {\n    color: theme.palette.primary.main,\n    textDecoration: 'none',\n    fontSize: '2em',\n    fontWeight: 300,\n  },\n  image: {\n    marginLeft: '10px',\n    marginTop: '5px',\n  },\n  toolbar: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    width: '400px',\n    [theme.breakpoints.down('sm')]: {\n      width: 'auto',\n    },\n  },\n  profile: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '400px',\n    alignItems: 'center',\n    [theme.breakpoints.down('sm')]: {\n      width: 'auto',\n      marginTop: 20,\n      justifyContent: 'center',\n    },\n  },\n  logout: {\n    marginLeft: '20px',\n  },\n  userName: {\n    display: 'flex',\n    alignItems: 'center',\n    textAlign: 'center',\n  },\n  brandContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  purple: {\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n  },\n}));","import React, { useState, useEffect } from 'react'\nimport { Link, useHistory, useLocation } from 'react-router-dom'\nimport { AppBar, Avatar, Toolbar, Typography, Button } from '@material-ui/core'\nimport useStyles from './styles'\nimport memoriesLogo from '../../images/memories.png'\nimport memoriesText from '../../images/memories-Text.png'\nimport { useDispatch } from 'react-redux'\nimport decode from 'jwt-decode'\n\nconst Navbar = () => {\n    const classes = useStyles()\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')))\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const location = useLocation()\n\n    const logout = () => {\n        dispatch({ type: 'LOGOUT' })\n        history.push('/Memories')\n        setUser(null)\n    }\n\n    useEffect(()=>{\n        const token = user?.token\n        if(token){\n            const decodedToken = decode(token)\n            if(decodedToken.exp * 1000 < new Date().getTime()) logout()\n\n        }\n        setUser(JSON.parse(localStorage.getItem('profile')))\n    }, [location])\n\n    return (\n        <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n            <Link to=\"/Memories\" className={classes.brandContainer}>\n                {/* <Typography component={Link} to=\"/Memories\" className={classes.heading} variant=\"h2\" align=\"center\">Memories</Typography> */}\n                <img src={memoriesText} alt=\"icon\" height=\"45px\" />\n                <img className={classes.image} src={memoriesLogo} alt=\"icon\" height=\"40\" />\n            </Link>\n            <Toolbar className={classes.toolbar} >\n                {user ? (\n                    <div className={classes.profile}>\n                        <Avatar className={classes.purple} alt={user.result.name} src={user.result.imageUrl} >{user.result.name}</Avatar>\n                        <Typography className={classes.userName} variant=\"h6\">{user.result.name}</Typography>\n                        <Button variant=\"contained\" className={classes.logout} color=\"secondary\" onClick={logout}>\n                            Logout\n                        </Button>\n                    </div>\n                ) : (\n                    <Button component={Link} to=\"/Memories/auth\" variant=\"contained\" color=\"primary\">Sign In</Button>\n                )}\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default Navbar ","import axios from 'axios'\nconst API = axios.create({ baseURL: 'https://stanley-memories.herokuapp.com'})\n// const API = axios.create({ baseURL: 'http://localhost:5000'})\n// const url = 'https://stanley-memories.herokuapp.com/posts';\n// const url = \"http://localhost:5000/posts\"\nAPI.interceptors.request.use((req) => {\n    if(localStorage.getItem('profile')) {\n        req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`\n    }\n    return req\n})\nexport const fetchPost = (id) => {\n    return API.get(`/posts/${id}`)\n}\nexport const fetchPosts = (page) => {\n    return API.get(`/posts?page=${page}`)\n}\nexport const fetchPostsBySearch = (searchQuery) => API.get(`/posts/search?searchQuery=${searchQuery.search || 'none'}&tags=${searchQuery.tags}`)\nexport const createPost = (newPost) => API.post('/posts', newPost)\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost)\nexport const deletePost = (id) => API.delete(`/posts/${id}`)\nexport const likePost = (id) => API.patch(`/posts/${id}/likePost`)\nexport const comment = (value, id) => API.post(`/posts/${id}/commentPost`, { value })\nexport const signIn = (formData) => API.post('/user/signin', formData)\nexport const signUp= (formData) => API.post('/user/signup', formData)\n","import { FETCH_ALL, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE, START_LOADING, END_LOADING, FETCH_POST, COMMENT } from '../constants/actionTypes'\nimport * as api from '../api/index.js'\n\nexport const getPost = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING })\n        const { data } = await api.fetchPost(id)\n        dispatch( { type: FETCH_POST, payload: data })\n        dispatch( {type: END_LOADING })\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const getPosts = (page) => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING })\n        const { data } = await api.fetchPosts(page)\n        dispatch( { type: FETCH_ALL, payload: data })\n        dispatch( {type: END_LOADING })\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING })\n        const { data: { data } } = await api.fetchPostsBySearch(searchQuery)\n        dispatch( { type: FETCH_BY_SEARCH, payload: data })\n        dispatch( {type: END_LOADING })\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const createPost = (post, history) => async (dispatch) => {\n    try {\n        dispatch({ type: START_LOADING })\n        const { data } = await api.createPost(post)\n        history.push(`/Memories/posts/${data._id}`)\n        dispatch({ type: CREATE, payload: data})\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const updatePost = (id, post) => async (dispatch) => {\n    try {\n        const { data } = await api.updatePost(id, post)\n        dispatch({ type: UPDATE, payload: data })\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const deletePost = (id) => async (dispatch) => {\n    try {\n        await api.deletePost(id)\n        dispatch({ type: DELETE, payload: id })\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const likePost = (id) => async (dispatch) => {\n    try {\n        const { data } = await api.likePost(id)\n        dispatch({ type: LIKE, payload: data })\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const commentPost = (value, id) => async (dispatch) => {\n    try {\n        const { data } = await api.comment(value, id)\n        dispatch( { type: COMMENT, payload: data })\n        return data.comments\n    } catch (error) {\n        console.log(error)\n    }\n}","import { makeStyles } from '@material-ui/core/styles'\n\nexport default makeStyles({\n  media: {\n    height: 0,\n    paddingTop: '56.25%',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    backgroundBlendMode: 'darken',\n  },\n  border: {\n    border: 'solid',\n  },\n  fullHeightCard: {\n    height: '100%',\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    borderRadius: '15px',\n    height: '100%',\n    position: 'relative',\n  },\n  overlay: {\n    position: 'absolute',\n    top: '20px',\n    left: '20px',\n    color: 'white',\n  },\n  overlay2: {\n    position: 'absolute',\n    top: '20px',\n    right: '20px',\n    color: 'white',\n  },\n  grid: {\n    display: 'flex',\n  },\n  details: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: '20px',\n  },\n  title: {\n    padding: '0 16px',\n  },\n  cardActions: {\n    padding: '0 16px 8px 16px',\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  cardAction: {\n    display: 'block',\n    textAlign: 'initial',\n  },\n});","import React, { useState } from 'react'\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography, ButtonBase } from '@material-ui/core'\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz'\nimport ThumbUpAltOutlined from '@material-ui/icons/ThumbUpAltOutlined'\nimport moment from 'moment'\nimport { useDispatch } from 'react-redux'\nimport { deletePost, likePost } from '../../../actions/posts'\nimport useStyles from './styles'\nimport { useHistory } from 'react-router-dom'\n\n\nconst Post = ({ post, setCurrentId }) => {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const user = JSON.parse(localStorage.getItem('profile'))\n    const [likes, setLikes] = useState(post?.likes)\n    const userId = user?.result?.googleId || user?.result?._id\n    const hasLikedPost = post.likes.find((like) => like === userId)\n    const handleLike = async () => {\n        dispatch(likePost(post._id))\n        if(hasLikedPost){\n            setLikes(post.likes.filter((id) => id !== userId))\n        } else {\n            setLikes([...post.likes, userId]) \n        }\n    }\n    const Likes = () => {\n        if (likes.length > 0) {\n          return likes.find((like) => like === userId)\n            ? (\n              <><ThumbUpAltIcon fontSize=\"small\" />&nbsp;{likes.length > 2 ? `You and ${likes.length - 1} others` : `${likes.length} like${likes.length > 1 ? 's' : ''}` }</>\n            ) : (\n              <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;{likes.length} {likes.length === 1 ? 'Like' : 'Likes'}</>\n            )\n        }\n        return <><ThumbUpAltOutlined fontSize=\"small\" />&nbsp;Like</>\n    }\n\n    const openPost = () => {\n        history.push(`/Memories/posts/${post._id}`)\n    }\n    \n    return (\n        <Card className={classes.card} raised elevation={6}>\n            <ButtonBase className={classes.cardAction} onClick={openPost} name=\"test\" component=\"span\">\n                <CardMedia className={classes.media} image={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} title={post.title}/>\n                <div className={classes.overlay}>\n                    <Typography variant=\"h6\">{post.name}</Typography>\n                    <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\n                </div>\n                {(((user?.result?.googleId === post?.creator) || (user?.result?._id === post?.creator)) && (\n                    <div className={classes.overlay2} name=\"edit\">\n                        <Button \n                            style={{color: 'white'}} \n                            size=\"small\" \n                            onClick={(e)=>{\n                                e.stopPropagation()\n                                setCurrentId(post._id)\n                            }}\n                        >\n                            <MoreHorizIcon fontSize=\"medium\" />\n                        </Button>\n                    </div>\n                ))}\n                <div className={classes.details}>\n                    <Typography variant=\"body2\" color=\"textSecondary\">{post.tags.map((tag)=>`#${tag.trim()} `)}</Typography>\n                </div>\n                <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">{post.title}</Typography>\n                <CardContent>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.message}</Typography>\n                </CardContent>\n            </ButtonBase>\n\n            <CardActions className={classes.cardActions}>\n                <Button size=\"small\" color=\"primary\" disabled={!user?.result} onClick={handleLike}>\n                    <Likes />\n                </Button>\n                {(((user?.result?.googleId === post?.creator) || (user?.result?._id === post?.creator)) && (\n                <Button size=\"small\" color=\"primary\" onClick={() => dispatch(deletePost(post._id))}>\n                    <DeleteIcon fontSize=\"small\" /> Delete\n                </Button>\n                ))}\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default Post","import { makeStyles } from '@material-ui/core/styles';\nimport { deepPurple } from '@material-ui/core/colors';\n\nexport default makeStyles((theme) => ({\n  mainContainer: {\n    borderRadius: 15,\n    margin: '30px 0',\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: '10px 50px',\n  },\n  heading: {\n    color: 'rgba(0,183,255, 1)',\n    textDecoration: 'none',\n  },\n  image: {\n    marginLeft: '15px',\n  },\n  toolbar: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    width: '400px',\n  },\n  profile: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '400px',\n  },\n  userName: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  brandContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  purple: {\n    color: theme.palette.getContrastText(deepPurple[500]),\n    backgroundColor: deepPurple[500],\n  },\n  [theme.breakpoints.down('sm')]: {\n    appBar: {\n      padding: '10px 20px',\n    },\n    heading: {\n      display: 'none',\n    },\n    userName: {\n      display: 'none',\n    },\n    image: {\n      marginLeft: '5px',\n    },\n    toolbar: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n      width: '160px',\n    },\n  },\n  actionDiv: {\n    textAlign: 'center',\n  },\n}));","import React from 'react';\nimport { Grid, CircularProgress } from '@material-ui/core'\nimport { useSelector } from 'react-redux'\nimport Post from './Post/Post'\nimport useStyles from './styles'\n\n\nconst Posts = ({ setCurrentId }) => {\n    const {posts, isLoading} = useSelector((state) => state.posts)\n    const classes = useStyles()\n\n    if(!posts.length && !isLoading) return 'No posts'\n    \n    return (\n        isLoading ? <CircularProgress /> : (\n            <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\n                {posts.map((post) => (\n                    <Grid key={post._id} item xs={12} sm={12} md={6} lg={3}>\n                        <Post post={post} setCurrentId={setCurrentId }/>\n                    </Grid>\n                ))}\n            </Grid>\n        )\n    )\n}\n\nexport default Posts","import { makeStyles } from '@material-ui/core/styles'\n\nexport default makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  form: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  fileInput: {\n    width: '97%',\n    margin: '10px 0',\n  },\n  buttonSubmit: {\n    marginBottom: 10,\n  },\n}))","import React, { useState, useEffect } from 'react'\nimport { TextField, Button, Typography, Paper } from '@material-ui/core'\nimport FileBase from 'react-file-base64'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useStyles from './styles'\nimport { createPost, updatePost } from '../../actions/posts'\nimport { useHistory } from 'react-router-dom'\n\nconst Form = ({ currentId, setCurrentId}) => { \n    const [postData, setPostData] = useState({ title: '', message: '', tags: '', selectedFile: ''})\n    const post = useSelector((state) => currentId ? state.posts.posts.find((p)=> p._id === currentId) : null )\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const user = JSON.parse(localStorage.getItem('profile'))\n\n    useEffect(() => {\n        if(post) setPostData(post)\n    }, [post])\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        if(currentId===0) {\n            dispatch(createPost({ ...postData, name: user?.result?.name }, history))\n        } else {\n            dispatch(updatePost({ ...currentId, name: user?.result?.name }, postData))\n        }\n        clear()\n    }\n\n    if(!user?.result?.name) {\n        return (\n            <Paper className={classes.paper}>\n                <Typography variant=\"h6\" align=\"center\">\n                    Please sign in to like or create your own memories.\n                </Typography>\n            </Paper>\n        )\n    }\n\n    const clear = () => {\n        setCurrentId(null)\n        setPostData({ title: '', message: '', tags: '', selectedFile: ''})\n    }\n    return (\n        <Paper className={classes.paper} elevation={6}>\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n                <Typography variant=\"h6\">{currentId ? 'Editing' : 'Creating'} a Memory</Typography>\n                <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })}/>\n                <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })}/>\n                <TextField name=\"tags\" variant=\"outlined\" label=\"Tags\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })}/>\n                <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({base64}) => setPostData({...postData, selectedFile: base64})}/></div>\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n                <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n            </form>\n        </Paper>\n    )\n}\n\nexport default Form","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(() => ({\n    ul: {\n        justifyContent: 'space-around'\n    }\n}))","import React, { useEffect } from \"react\"\nimport { Pagination, PaginationItem } from '@material-ui/lab'\nimport useStyles from './styles'\nimport { Link } from \"react-router-dom\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { getPosts } from '../actions/posts'\n\nconst Paginate = ({ page }) => {\n    const { numberOfPages } = useSelector((state) => state.posts)\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    \n    useEffect(() => {\n        if(page) dispatch(getPosts(page))\n    },[page])\n\n    return (\n        <Pagination \n            classes={{ ul: classes.ul }}\n            count={numberOfPages}\n            page={Number(page) || 1}\n            variant=\"outlined\"\n            color=\"primary\"\n            renderItem={(item) => (\n                <PaginationItem {...item} component={Link} to={`/Memories/posts?page=${item.page}`}/>\n            )}\n        />\n    )\n}\n\nexport default Paginate","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles((theme) => ({\n    appBarSearch: {\n        borderRadius: 4,\n        marginBottom: '1rem',\n        display: 'flex',\n        padding: '16px'\n    },\n    pagination: {\n        borderRadius: 4,\n        marginTop: '1rem',\n        padding: '16px',\n    },\n    gridContainer: {\n        [theme.breakpoints.down('xs')]: {\n            flexDirection: 'column-reverse'\n        }\n    }\n}))","import React, { useState, useEffect } from 'react'\nimport { Container, Grow, Grid, Paper, AppBar, TextField, Button } from '@material-ui/core'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport ChipInput from 'material-ui-chip-input'\nimport Posts from '../Posts/Posts'\nimport Form from '../Form/Form'\nimport { useDispatch } from \"react-redux\"\nimport Pagination from '../Pagination'\nimport useStyles from './styles'\nimport { getPosts, getPostsBySearch } from '../../actions/posts'\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search)\n}\n\nconst Home = () => {\n    const classes = useStyles()\n    const [currentId, setCurrentId] = useState(0)\n    const dispatch = useDispatch()\n    const query = useQuery()\n    const history = useHistory()\n    const page = query.get('page') || 1\n    const searchQuery = query.get('searchQuery')\n    const [search, setSearch] = useState('')\n    const [tags, setTags] = useState([])\n\n    const searchPost = () => {\n        if(search.trim() || tags){\n            dispatch(getPostsBySearch({ search, tags: tags.join(',')}))\n            history.push(`/Memories/posts/search?searchQuery=${search || 'none' }&tags=${tags.join(',')}`)\n        } else {\n            history.push('/Memories')\n        }\n    }\n    const handleKeyPress = (e) => {\n        if(e.keyCode === 13){\n            searchPost()\n        }\n    }\n\n    const handleAdd = (tag) => setTags([...tags, tag])\n\n    const handleDelete = (tagToDelete) => setTags(tags.filter((tag)=> tag!== tagToDelete))\n\n    return (\n        <Grow in>\n            <Container maxWidth=\"xl\">\n                <Grid container justifyContent=\"space-between\" alignItems=\"stretch\" spacing={3} className={classes.gridContainer}>\n                    <Grid item xs={12} sm={6} md={9}> \n                        <Posts setCurrentId={setCurrentId}/>\n                    </Grid>\n                    <Grid item xs={12} sm={6} md={3}> \n                        <AppBar className={classes.appBarSearch} position=\"static\" color=\"inherit\">\n                            <TextField\n                                name=\"search\"\n                                variant=\"outlined\"\n                                label=\"Search Memories\"\n                                fullWidth\n                                value={search}\n                                onChange={(e)=> setSearch(e.target.value) }\n                                onKeyPress={handleKeyPress}\n                            />\n                            <ChipInput \n                                styles={{margin: '10px 0' }}\n                                value={tags}\n                                onAdd={handleAdd}\n                                onDelete={handleDelete}\n                                label=\"Search Tags\"\n                                variant=\"outlined\"\n                            />\n                            <Button onClick={searchPost} className={classes.searchButton} color=\"primary\" variant=\"contained\">Search</Button>\n                        </AppBar>\n                        <Form currentId={currentId} setCurrentId={setCurrentId}/>\n                        {(!searchQuery && !tags.length) && (\n                            <Paper elevation={6} className={classes.pagination}>\n                                <Pagination page={page}/>\n                            </Paper>\n                        )}\n                    </Grid>\n                </Grid>\n            </Container>\n        </Grow>\n    )\n}\n\nexport default Home","import { makeStyles } from '@material-ui/core/styles'\n\nexport default makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: theme.spacing(2),\n  },\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  googleButton: {\n    marginBottom: theme.spacing(2),\n  },\n}))","import React from 'react'\nimport { TextField, Grid, InputAdornment, IconButton } from '@material-ui/core'\nimport Visibility from '@material-ui/icons/Visibility'\nimport VisibilityOff from '@material-ui/icons/Visibility'\n\nconst input = ({ name, handleChange, autoFocus, type, handleShowPassword, half, label }) => {\n    \n    return (\n        <Grid item xs={12} sm={half ? 6 : 12 } >\n            <TextField \n                name={name}\n                onChange={handleChange}\n                variant=\"outlined\"\n                required\n                fullWidth\n                label={label}\n                autoFocus={autoFocus}\n                type={type}\n                InputProps={name === \"password\" ? {\n                    endAdornment : (\n                        <InputAdornment position=\"end\">\n                            <IconButton onClick={handleShowPassword}>\n                                {type === \"password\" ? <Visibility /> : <VisibilityOff />}\n                            </IconButton>\n                        </InputAdornment>\n                    )\n                } : null} \n            />\n        </Grid>\n    )\n}\n\nexport default input\n","import React from 'react'\n\nconst icon = () => (\n  <svg style={{ width: '20px', height: '20px' }} viewBox=\"0 0 24 24\">\n    <path\n      fill=\"currentColor\"\n      d=\"M21.35,11.1H12.18V13.83H18.69C18.36,17.64 15.19,19.27 12.19,19.27C8.36,19.27 5,16.25 5,12C5,7.9 8.2,4.73 12.2,4.73C15.29,4.73 17.1,6.7 17.1,6.7L19,4.72C19,4.72 16.56,2 12.1,2C6.42,2 2.03,6.8 2.03,12C2.03,17.05 6.16,22 12.25,22C17.6,22 21.5,18.33 21.5,12.91C21.5,11.76 21.35,11.1 21.35,11.1V11.1Z\"\n    />\n  </svg>\n)\n\nexport default icon;","import React, { useState } from 'react'\nimport { Avatar, Button, Paper, Grid, Typography, Container } from \"@material-ui/core\"\nimport { GoogleLogin } from 'react-google-login'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport useStyles from './styles'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport Input from './input'\nimport Icon from './icon'\nimport { signin, signup } from '../../actions/auth'\n\nconst initialState = { firstName: '', lastName: '', email: '', password: '', confirmPassword: '' }\n\nconst Auth = () => {\n    const classes = useStyles()\n    const [showPassword, setShowPassword] = useState(false)\n    const [isSignup, setIsSignup] = useState(false)\n    const [formData, setFormData] = useState(initialState)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const handleShowPassword = () => {\n        setShowPassword((prevShowPassword)=> !prevShowPassword)\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if(isSignup) {\n            dispatch(signup(formData, history))\n        } else {\n            dispatch(signin(formData, history))\n\n        }\n    }\n    const handleChange = (e) => {\n        setFormData({ ...formData, [e.target.name]: e.target.value })\n    }\n    const switchMode = () => {\n        setIsSignup((prevIsSignup) => !prevIsSignup)\n        setShowPassword(false)\n    }\n    const googleSuccess = async (res) => {\n        //optional chaining operator\n        const result = res?.profileObj\n        const token = res?.tokenId\n\n        try {\n            dispatch({ type: 'AUTH', data: { result, token }})\n            history.push('/Memories')\n        } catch (error) {\n            console.log(error)\n        }\n\n    }\n    const googleFailure = async (res) => {\n        console.log('failure response',res)\n        console.log(\"Google Sign In was unsuccessful. Try again later\")\n    }\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <Paper className={classes.paper} elevation={3} >\n                <Avatar className={classes.avatar}> \n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography variant=\"h5\">{isSignup ? 'Sign Up' : 'Sign In' }</Typography>\n                <form className={classes.form} onSubmit={handleSubmit}>\n                    <Grid container spacing={2}>\n                        {\n                            isSignup && (\n                                <>\n                                    <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half />\n                                \n                                    <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} half />\n                                </>\n                            )\n                        }\n                        <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\n                        <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword ? \"text\" : \"password\"} handleShowPassword={handleShowPassword} />\n                        { isSignup && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\"/>}\n                    </Grid>\n                    <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n                        { isSignup ? 'Sign Up' : 'Sign In' }\n                    </Button>\n                    <GoogleLogin \n                        clientId=\"293664759215-mq85kir3of6mrqcq7a3ejislc205uru7.apps.googleusercontent.com\"\n                        render={(renderProps)=> (\n                            <Button\n                                className={classes.googleButton}\n                                color=\"primary\"\n                                fullWidth\n                                onClick={renderProps.onClick}\n                                disabled={renderProps.disabled}\n                                startIcon={<Icon/>}\n                                variant=\"contained\"\n                            >\n                                Google Sign In\n                            </Button>\n                        )}\n                        onSuccess={googleSuccess}\n                        onFailure={googleFailure}\n                        cookiePolicy=\"single_host_origin\"\n                    />\n                    <Grid container justifyContent=\"flex-end\">\n                        <Grid item>\n                            <Button onClick={switchMode}>\n                                { isSignup ? 'Already have an account? Sign In' : \"Don't have an account? Sign Up\"}\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </form>\n            </Paper>\n        </Container>\n    )\n}\n\nexport default Auth\n","import { AUTH } from '../constants/actionTypes'\nimport * as api from '../api/index'\n\nexport const signin = (formData, history) => async (dispatch) => {\n    try {\n        const { data } = await api.signIn(formData)\n        dispatch({ type: AUTH, data })\n        history.push('/Memories')\n    } catch (error) {\n        console.log(error)\n    }\n}\n\nexport const signup = (formData, history) => async (dispatch) => {\n    try {\n        const { data } = await api.signUp(formData)\n        dispatch({ type: AUTH, data })\n        history.push('/Memories')\n    } catch (error) {\n        console.log(error)\n    }\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  media: {\n    borderRadius: '20px',\n    objectFit: 'cover',\n    width: '100%',\n    maxHeight: '600px',\n\n  },\n  card: {\n    display: 'flex',\n    width: '100%',\n    [theme.breakpoints.down('sm')]: {\n      flexWrap: 'wrap',\n      flexDirection: 'column',\n    },\n  },\n  section: {\n    borderRadius: '20px',\n    margin: '10px',\n    flex: 1,\n  },\n  imageSection: {\n    marginLeft: '20px',\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: 0,\n    },\n  },\n  recommendedPosts: {\n    display: 'flex',\n    [theme.breakpoints.down('sm')]: {\n      flexDirection: 'column',\n    },\n  },\n  loadingPaper: {\n    display: 'flex', justifyContent: 'center', alignItems: 'center', padding: '20px', borderRadius: '15px', height: '39vh',\n  },\n  commentsOuterContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  commentsInnerContainer: {\n    height: '200px',\n    overflowY: 'auto',\n    marginRight: '30px'\n  }\n}));","import React, { useState, useRef } from 'react'\nimport { Typography, TextField, Button } from '@material-ui/core'\nimport { useDispatch } from 'react-redux'\nimport useStyles from './styles'\nimport { commentPost } from '../../actions/posts'\n\nconst CommentSection = ({ post }) => {\n    const classes = useStyles()\n    const [comments, setComments] = useState(post?.comments)\n    const [comment, setComment] = useState('')\n    const user = JSON.parse(localStorage.getItem('profile'))\n    const dispatch = useDispatch()\n    const commentsRef = useRef()\n\n    const handleClick = async () => {\n        const finalComment = `${user.result.name}: ${comment}`\n        const newComments = await dispatch(commentPost(finalComment, post._id))\n        setComments(newComments)\n        setComment('')\n        commentsRef.current.scrollIntoView( { behavior: 'smooth' } )\n    }\n\n    return (\n        <div>\n            <div className={classes.commentsOuterContainer}>\n                <div className={classes.commentsInnerContainer}>\n                    <Typography gutterBottom variant=\"h6\">\n                        Comments\n                    </Typography>\n                    { comments.map((c, i) => (\n                        <Typography key={i} gutterBottom variant=\"subtitle1\">\n                            <strong>{c.split(': ')[0]}</strong>\n                            {c.split(':')[1]}\n                        </Typography>\n                    ))}\n                    <div ref={commentsRef} />\n                </div>\n                {user?.result?.name && (\n                    <div style={{ width: '70%' }}>\n                            <Typography gutterBottom variant=\"h6\">\n                                Add a public comment...\n                            </Typography>\n                                <TextField \n                                    fullWidth\n                                    rows={4}\n                                    variant=\"outlined\"\n                                    label=\"Comment\"\n                                    multiline\n                                    value={comment}\n                                    onChange={(e) => setComment(e.target.value)}\n                                />\n                                <Button color=\"primary\" style={{ marginTop: '10px'}} fullWidth disabled={!comment} variant=\"contained\" onClick={handleClick}>\n                                    Comment\n                                </Button>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n}\n\nexport default CommentSection","import React, {useEffect} from 'react'\nimport { Paper, Typography, CircularProgress, Divider } from '@material-ui/core'\nimport { useDispatch, useSelector } from 'react-redux'\nimport moment from 'moment'\nimport { useParams, useHistory } from 'react-router-dom'\nimport useStyles from './styles'\nimport { getPost, getPostsBySearch } from '../../actions/posts'\nimport CommentSection from './CommentSection'\n\nconst PostDetails = () => {\n    const { post, posts, isLoading } = useSelector((state) => state.posts)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const classes = useStyles()\n    const { id } = useParams()\n\n    useEffect(() => {\n        dispatch(getPost(id))\n    }, [id])\n\n    useEffect(() => {\n        if(post) {\n            dispatch(getPostsBySearch({ search: 'none', tags: post?.tags.join(',') }))\n        }\n    }, [post])\n    \n    if(!post) return null\n    \n    if(isLoading) return (\n        <Paper elevation={6} className={classes.loadingPaper}>\n            <CircularProgress size=\"7em\"/>\n        </Paper>\n    )\n    \n    const recommendedPosts = posts.filter( ({ _id }) => _id !== post._id )\n    const openPost = (_id) => history.push(`/Memories/posts/${_id}`)\n\n    return (\n        <Paper style={{ padding: '20px', borderRadius: '15px' }} elevation={6} >\n            <div className={classes.card}>\n                <div className={classes.section}>\n                    <Typography variant=\"h3\" component=\"h2\">{post.title}</Typography>\n                    <Typography gutterBottom variant=\"h6\" color=\"textSecondary\" component=\"h2\">{post.tags}</Typography>\n                    <Typography gutterBottom variant=\"body1\" component=\"p\">{post.message}</Typography>\n                    <Typography variant=\"h6\">Created By: {post.name}</Typography>\n                    <Typography variant=\"body1\">{moment(post.createdAt).fromNow()}</Typography>\n                    <Divider style={{ margin: '20px 0' }} />\n                    <Typography variant=\"body1\"><strong>Realtime Chat - coming soon</strong></Typography>\n                    <Divider style={{ margin: '20px 0' }} />\n                    {/* <Typography variant=\"body1\"><strong>comments - coming soon</strong></Typography> */}\n                    <CommentSection post={post} />\n                    <Divider style={{ margin: '20px 0' }} />\n                </div>\n                <div className={classes.imageSection}>\n                    <img className={classes.media} src={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} alt={post.title}/>\n                </div>\n            </div>\n            {recommendedPosts.length  && (\n                <div className={classes.section}>\n                <Typography gutterBottom variant=\"h5\">Recommended:</Typography>\n                <Divider />\n                <div className={classes.recommendedPosts}>\n                    {recommendedPosts.map(({ title, message, name, likes, selectedFile, _id }) => (\n                        <div style={{ margin: '20px', cursor: 'pointer' }} onClick={()=> openPost(_id)} key={_id} >\n                            <Typography gutterBottom variant=\"h6\">{title}</Typography>\n                            <Typography gutterBottom variant=\"subtitle2\">{name}</Typography>\n                            <Typography gutterBottom variant=\"subtitle2\">{message}</Typography>\n                            <Typography gutterBottom variant=\"subtitle1\">Likes: {likes.length}</Typography>\n                            <img src={selectedFile} width=\"200px\" />\n                        </div>\n                    ))}\n                </div>\n                </div>\n            )}\n        </Paper>\n    )\n}\n\nexport default PostDetails\n","import React from \"react\"\nimport { Container } from '@material-ui/core'\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\"\nimport Navbar from \"./components/Navbar/Navbar\"\nimport Home from './components/Home/Home'\nimport Auth from \"./components/Auth/Auth\"\nimport PostDetails from './components/PostDetails/PostDetails'\n\nconst App = () => {\n    const user = JSON.parse(localStorage.getItem('profile'))\n\n    return (\n        <BrowserRouter>\n            <Container maxWidth='xl'>\n                <Navbar />\n                <Switch>\n                    <Route path=\"/Memories\" exact component={() => <Redirect to=\"/Memories/posts\" /> } />\n                    <Route path=\"/Memories/posts\" exact component={Home} />\n                    <Route path=\"/Memories/posts/search\" exact component={Home} />\n                    <Route path=\"/Memories/posts/:id\" component={PostDetails} /> \n                    <Route path=\"/Memories/auth\" exact component={() => (!user ? <Auth /> : <Redirect to=\"/Memories/posts\" />)} />\n                </Switch>\n            </Container>\n        </BrowserRouter>\n    )\n}\n\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport reducers from './reducers'\nimport App from'./App'\nimport './index.css'\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)))\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}