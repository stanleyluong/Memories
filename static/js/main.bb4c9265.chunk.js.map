{"version":3,"sources":["constants/actionTypes.js","reducers/posts.js","reducers/index.js","api/index.js","components/Posts/Post/styles.js","components/Posts/Post/Post.js","actions/posts.js","components/Posts/styles.js","components/Posts/Posts.js","components/Form/styles.js","components/Form/Form.js","images/memories.png","styles.js","App.js","index.js"],"names":["CREATE","UPDATE","DELETE","FETCH_ALL","LIKE","posts","action","type","payload","console","log","map","post","_id","filter","combineReducers","url","updatePost","id","updatedPost","axios","patch","deletePost","delete","likePost","makeStyles","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","overlay","top","left","color","overlay2","right","grid","details","margin","title","padding","cardActions","Post","setCurrentId","classes","useStyles","dispatch","useDispatch","Card","className","CardMedia","image","selectedFile","Typography","variant","creator","moment","createdAt","fromNow","Button","style","size","onClick","fontSize","tags","tag","trim","gutterBottom","CardContent","component","message","CardActions","a","api","data","likeCount","theme","mainContainer","alignItems","smMargin","spacing","actionDiv","textAlign","Posts","useSelector","state","length","Grid","container","item","xs","sm","CircularProgress","root","paper","form","flexWrap","fileInput","width","buttonSubmit","marginBottom","Form","currentId","useState","postData","setPostData","find","p","useEffect","clear","Paper","autoComplete","noValidate","onSubmit","e","preventDefault","newPost","createPost","TextField","name","label","fullWidth","value","onChange","target","split","multiple","onDone","base64","appBar","heading","marginLeft","breakpoints","down","App","get","Container","maxWidth","AppBar","align","src","memories","alt","Grow","in","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb4c9265.chunk.js","sourcesContent":["export const CREATE = 'CREATE'\nexport const UPDATE = 'UPDATE'\nexport const DELETE = 'DELETE'\nexport const FETCH_ALL = 'FETCH_ALL'\nexport const LIKE = 'LIKE'\n","import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\n\nconst posts = (posts = [], action) => {\n\n    switch(action.type){\n        case FETCH_ALL:\n            return action.payload;\n        case LIKE:\n            console.log('like',action);\n            return posts.map((post) => post._id === action.payload._id ? action.payload : post );\n        case CREATE:\n            console.log('create',action)\n            return [...posts, action.payload];\n        case UPDATE:\n            console.log('update',action);\n            return posts.map((post) => post._id === action.payload._id ? action.payload : post );\n        case DELETE:\n            console.log('delete',action);\n            return posts.filter((post) => post._id !== action.payload);\n        default:\n            return posts;\n    }\n    \n};\n\nexport default posts;","import { combineReducers } from \"redux\";\n\nimport posts from './posts';\n\nexport default combineReducers({ posts });","import axios from 'axios';\n\nconst url = 'https://stanleyluong-memories.herokuapp.com/posts';\n\nexport const fetchPosts = () => axios.get(url); \nexport const createPost = (newPost) => axios.post(url, newPost);\nexport const updatePost = (id, updatedPost) => axios.patch(`${url}/${id}`, updatedPost);\nexport const deletePost = (id) => axios.delete(`${url}/${id}`);\nexport const likePost = (id) => axios.patch(`${url}/${id}/likePost`);","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  media: {\n    height: 0,\n    paddingTop: '56.25%',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    backgroundBlendMode: 'darken',\n  },\n  border: {\n    border: 'solid',\n  },\n  fullHeightCard: {\n    height: '100%',\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    borderRadius: '15px',\n    height: '100%',\n    position: 'relative',\n  },\n  overlay: {\n    position: 'absolute',\n    top: '20px',\n    left: '20px',\n    color: 'white',\n  },\n  overlay2: {\n    position: 'absolute',\n    top: '20px',\n    right: '20px',\n    color: 'white',\n  },\n  grid: {\n    display: 'flex',\n  },\n  details: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: '20px',\n  },\n  title: {\n    padding: '0 16px',\n  },\n  cardActions: {\n    padding: '0 16px 8px 16px',\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n});","import React from 'react';\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography } from '@material-ui/core';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport moment from 'moment';\nimport useStyles from './styles';\nimport { useDispatch } from 'react-redux';\nimport { deletePost, likePost } from '../../../actions/posts'\n\nconst Post = ({ post, setCurrentId }) => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    return (\n        <Card className={classes.card}>\n            <CardMedia className={classes.media} image={post.selectedFile} title={post.title}/>\n            <div className={classes.overlay}>\n                <Typography variant=\"h6\">{post.creator}</Typography>\n                <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\n            </div>\n            <div className={classes.overlay2}>\n                <Button style={{color: 'white'}} size=\"small\" onClick={()=>setCurrentId(post._id)}>\n                    <MoreHorizIcon fontSize=\"medium\" />\n                </Button>\n            </div>\n            <div className={classes.details}>\n                <Typography variant=\"body2\" color=\"textSecondary\">{post.tags.map((tag)=>`#${tag.trim()} `)}</Typography>\n            </div>\n            <Typography className={classes.title} variant=\"h5\" gutterBottom>{post.title}</Typography>\n            <CardContent>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.message}</Typography>\n            </CardContent>\n            <CardActions className={classes.cardActions}>\n                <Button size=\"small\" color=\"primary\" onClick={() => dispatch(likePost(post._id)) }>\n                    <ThumbUpAltIcon fontSize=\"small\" />\n                    {/* {` ${post.likeCount} Likes`} */}\n                    &nbsp; Like &nbsp;\n                    {post.likeCount}\n                </Button>\n                <Button size=\"small\" color=\"primary\" onClick={() => dispatch(deletePost(post._id))}>\n                    <DeleteIcon fontSize=\"small\" />\n                    Delete\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}\n\nexport default Post","import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\nimport * as api from '../api';\n\n\nexport const getPosts = () => async (dispatch) => {\n    try {\n        const { data } = await api.fetchPosts();\n        dispatch( { type: FETCH_ALL, payload: data });\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const createPost = (post) => async (dispatch) => {\n    try {\n        const { data } = await api.createPost(post);\n        dispatch({ type: CREATE, payload: data});\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const updatePost = (id, post) => async (dispatch) => {\n    try {\n        const { data } = await api.updatePost(id, post);\n        dispatch({ type: UPDATE, payload: data });\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const deletePost = (id) => async (dispatch) => {\n    try {\n        await api.deletePost(id)\n        dispatch({ type: DELETE, payload: id });\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const likePost = (id) => async (dispatch) => {\n    try {\n        const { data } = await api.likePost(id);\n        dispatch({ type: LIKE, payload: data });\n    } catch (error) {\n        console.log(error)\n    }\n}","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  mainContainer: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  smMargin: {\n    margin: theme.spacing(1),\n  },\n  actionDiv: {\n    textAlign: 'center',\n  },\n}));","import React from 'react';\nimport { Grid, CircularProgress } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport Post from './Post/Post';\nimport useStyles from './styles';\n\n\nconst Posts = ({ setCurrentId }) => {\n    const posts = useSelector((state) => state.posts)\n    const classes = useStyles();\n\n    return (\n        !posts.length ? <CircularProgress /> : (\n            <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\n                {posts.map((post) => (\n                    <Grid key={post._id} item xs={12} sm={6}>\n                        <Post post={post} setCurrentId={setCurrentId }/>\n                    </Grid>\n                ))}\n            </Grid>\n        )\n    )\n}\n\nexport default Posts;","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  form: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n  },\n  fileInput: {\n    width: '97%',\n    margin: '10px 0',\n  },\n  buttonSubmit: {\n    marginBottom: 10,\n  },\n}));","import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport FileBase from 'react-file-base64';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\n\nconst Form = ({ currentId, setCurrentId}) => { \n    const [postData, setPostData] = useState({ creator: '', title: '', message: '', tags: '', selectedFile: ''});\n    const post = useSelector((state) => currentId ? state.posts.find((p)=> p._id === currentId) : null );\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if(post) setPostData(post);\n    }, [post])\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if(currentId) {\n            dispatch(updatePost(currentId, postData));\n        } else {\n            dispatch(createPost(postData));\n        }\n        clear();\n    }\n\n    const clear = () => {\n        setCurrentId(null)\n        setPostData({ creator: '', title: '', message: '', tags: '', selectedFile: ''});\n    }\n    return (\n        <Paper className={classes.paper}>\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\n                <Typography variant=\"h6\">{currentId ? 'Editing' : 'Creating'} a Memory</Typography>\n                <TextField name=\"creator\" variant=\"outlined\" label=\"Creator\" fullWidth value={postData.creator} onChange={(e) => setPostData({ ...postData, creator: e.target.value })}/>\n                <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })}/>\n                <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })}/>\n                <TextField name=\"tags\" variant=\"outlined\" label=\"Tags\" fullWidth value={postData.tags} onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })}/>\n                <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({base64}) => setPostData({...postData, selectedFile: base64})}/></div>\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n                <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\n\n            </form>\n        </Paper>\n    )\n}\n\nexport default Form","export default __webpack_public_path__ + \"static/media/memories.9cfa8a46.png\";","import { makeStyles } from \"@material-ui/core\";\n\nexport default makeStyles((theme) => ({\n    appBar: {\n        borderRadius: 15,\n        margin: '30px 0',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center'\n    },\n    heading: {\n        color: 'rgba(0,183,255,1)'\n    },\n    image: {\n        marginLeft: '15px'\n    },\n    [theme.breakpoints.down('sm')]: {\n        mainContainer: {\n            flexDirection: 'column-reverse'\n        }\n    }\n}))","import React, { useState, useEffect } from \"react\";\nimport { Container, AppBar, Typography, Grow, Grid } from '@material-ui/core';\nimport { useDispatch } from \"react-redux\";\nimport { getPosts } from \"./actions/posts\";\nimport Posts from './components/Posts/Posts';\nimport Form from './components/Form/Form';\nimport memories from './images/memories.png';\nimport useStyles from './styles';\n\nconst App = () => {\n    const [currentId, setCurrentId] = useState(null);\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getPosts());\n    }, [currentId, dispatch])\n    \n    return (\n        <Container maxWidth='lg'>\n            <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n                <Typography className={classes.heading} variant=\"h2\" align=\"center\">Memories</Typography>\n                <img className={classes.image} src={memories} alt=\"memories\" height=\"60\" />\n            </AppBar>\n            <Grow in>\n                <Grid className={classes.mainContainer} container justifyContent=\"space-between\" alignItems=\"stretch\" spacing={3}>\n                    <Grid item xs={12} sm={7}> \n                        <Posts setCurrentId={setCurrentId}/>\n                    </Grid>\n                    <Grid item xs={12} sm={4}> \n                        <Form currentId={currentId} setCurrentId={setCurrentId}/>\n                    </Grid>\n                </Grid>\n            </Grow>\n        </Container>\n    );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\nimport App from'./App';\nimport './index.css';\n\nconst store = createStore(reducers, compose(applyMiddleware(thunk)))\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}